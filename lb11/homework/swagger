openapi: 3.0.3
info:
  title: Games
  description: |-
    This is a simple aplication for management of a game and players
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8082
paths:
  /players:
    post:
      summary: Add a new player
      description: Create a new player with the provided name
      parameters:
        - in: query
          name: playerName
          required: true
          schema:
            type: string
          description: Name of the player
      responses:
        '201':
          description: Player created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /players/{id}:
    put:
      summary: Update player's name
      description: Update the name of a player by their ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the player
        - in: query
          name: playerName
          required: true
          schema:
            type: string
          description: New name for the player
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player not found

    delete:
      summary: Delete a player
      description: Delete a player by their ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the player
      responses:
        '204':
          description: Player deleted successfully
        '404':
          description: Player not found
  /games:
    get:
      summary: Get the list of games
      description: Retrieve the list of games
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
components:
  schemas:
    Player:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          description: player name
      xml:
        name: player
    Game:
      type: object
      properties:
        id:
          type: integer
          format: int64
        player1:
          $ref: '#/components/schemas/Player'
        player2:
          $ref: '#/components/schemas/Player'
        winner:
          $ref: '#/components/schemas/Player'
        statusEnd:
          type: string
      xml:
        name: game